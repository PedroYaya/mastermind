{"remainingRequest":"/Users/pedroyaya/Desktop/mastermind/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pedroyaya/Desktop/mastermind/src/components/Actions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pedroyaya/Desktop/mastermind/src/components/Actions.vue","mtime":1622206351633},{"path":"/Users/pedroyaya/Desktop/mastermind/node_modules/cache-loader/dist/cjs.js","mtime":1619158883008},{"path":"/Users/pedroyaya/Desktop/mastermind/node_modules/babel-loader/lib/index.js","mtime":1619158882998},{"path":"/Users/pedroyaya/Desktop/mastermind/node_modules/cache-loader/dist/cjs.js","mtime":1619158883008},{"path":"/Users/pedroyaya/Desktop/mastermind/node_modules/vue-loader/lib/index.js","mtime":1619158892309}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnQWN0aW9ucycsCiAgICBtZXRob2RzOiB7CiAgICAgICAgbmV3R2FtZSAoKSB7CiAgICAgICAgICAgIGNvbnN0IHVybCA9ICdodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2dhbWVzLyc7CiAgICAgICAgICAgIGNvbnN0IGdhbWUgPSB7CiAgICAgICAgICAgICAgICAnbnVtX2NvbG9ycyc6IDQsCiAgICAgICAgICAgICAgICAnbnVtX3Nsb3RzJzogNCwKICAgICAgICAgICAgICAgICdtYXhfZ3Vlc3Nlcyc6IDgKICAgICAgICAgICAgfQogICAgICAgICAgICBheGlvcy5wb3N0KHVybCwgZ2FtZSkudGhlbiggKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldEN1cnJlbnRHYW1lJywgcmVzcG9uc2UuZGF0YSkKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKCiAgICAgICAgY29uZmlybUd1ZXNzICgpIHsKICAgICAgICAgICAgY29uc3QgaWQgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldEN1cnJlbnRHYW1lLmlkOwogICAgICAgICAgICBjb25zdCB1cmwgPSAnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS9nYW1lcy8nICsgaWQgKyAnL2d1ZXNzZXMvJzsKICAgICAgICAgICAgY29uc3QgZ3Vlc3MgPSB7CiAgICAgICAgICAgICAgICBjb2RlOiBbJ29yYW5nZScsICdibHVlJywgJ2dyZWVuJywgJ3llbGxvdyddCiAgICAgICAgICAgIH0KICAgICAgICAgICAgYXhpb3MucG9zdCh1cmwsIGd1ZXNzKS50aGVuKCAocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpCiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwR2V0dGVycyhbCiAgICAgICAgICAgICdnZXRDdXJyZW50R2FtZScKICAgICAgICBdKQogICAgfQp9Cg=="},{"version":3,"sources":["Actions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Actions.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"actions\">\n        <a v-on:click=\"confirmGuess\" class=\"confirm shadow disabled\">\n            <img src=\"../assets/icons/check.png\" height=\"20px\" width=\"20px\"/>\n        </a>\n        <a class=\"reset shadow disabled\">\n            <img src=\"../assets/icons/reset.png\" height=\"20px\" width=\"20px\"/>\n        </a>\n        <div v-if=\"getCurrentGame.status && getCurrentGame.status !== 'running'\" class=\"results\">\n            <h3 class=\"win\">{{ getCurrentGame.status }}</h3>\n            <span>Solution:</span>\n            <div class=\"solution\">\n                <div v-for=\"(color, i) in getCurrentGame.secret_code\" :key=\"i\" class=\"slot\" :style=\"{background: color}\"></div>\n            </div>\n        </div>\n        <a v-on:click=\"newGame\" class=\"new-game-cta shadow\">New Game</a>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import { mapGetters } from 'vuex'\n\n    export default {\n        name: 'Actions',\n        methods: {\n            newGame () {\n                const url = 'http://localhost:8000/api/games/';\n                const game = {\n                    'num_colors': 4,\n                    'num_slots': 4,\n                    'max_guesses': 8\n                }\n                axios.post(url, game).then( (response) => {\n                    this.$store.commit('setCurrentGame', response.data)\n                    console.log(response.data)\n                })\n            },\n\n            confirmGuess () {\n                const id = this.$store.getters.getCurrentGame.id;\n                const url = 'http://localhost:8000/api/games/' + id + '/guesses/';\n                const guess = {\n                    code: ['orange', 'blue', 'green', 'yellow']\n                }\n                axios.post(url, guess).then( (response) => {\n                    console.log(response.data)\n                })\n            }\n        },\n        computed: {\n            ...mapGetters([\n                'getCurrentGame'\n            ])\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n\n    .actions {\n        position: relative;\n        padding: 10px 0;\n\n        .confirm, .reset {\n            cursor: pointer;\n            display: block;\n            background: white;\n            border-radius: 15px;\n            padding: 5px;\n            margin: 5px 0;\n            width: 35px;\n\n            &.disabled {\n                opacity: .6;\n            }\n        }\n\n        .results {\n            margin-top: 20px;\n\n            h3 {\n                font-weight: 800;\n                margin: 0;\n\n                &.win {\n                    color: green;\n                }\n\n                &.loose {\n                    color: red;\n                }\n            }\n\n            span {\n                font-weight: 800;\n            }\n\n            .solution {\n                display: flex;\n                .slot {\n                    width: 10px;\n                    height: 10px;\n                    background: green;\n                    margin: 3px;\n                    border-radius: 20px;\n                }\n            }\n        }\n\n        .new-game-cta {\n            cursor: pointer;\n            position: absolute;\n            bottom: 1px;\n            background: white;\n            border-radius: 25px;\n            padding: 10px;\n            text-decoration: none;\n            line-height: 20px;\n        }\n\n    }\n\n\n    @media screen and (min-width: 768px) {\n\n        .actions {\n            .new-game-cta {\n                left: 10px;\n            }\n        }\n    }\n\n\n</style>\n"]}]}